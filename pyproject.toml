[tool.poetry]
name = "pyscenario"
version = "0.1.8"
description = "Python Scenario Automation contains a library to interface with Scenario IFSEI Classic for home automation."
authors = ["Carlos Mazzei <carlos.mazzei@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/carlosmazzei/pyscenario"
repository = "https://github.com/carlosmazzei/pyscenario"
documentation = "https://pyscenario.readthedocs.io"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Programming Language :: Python :: 3.12",
]

# Only packages in this group will be installed in the release image
[tool.poetry.dependencies]
python = "^3.12"

# documentation
voluptuous = ">=0.13.1,<0.16.0"
telnetlib3 = "^2.0.4"
asyncio = "^3.4.3"
pyyaml = "^6.0.1"

[tool.poetry.group.docs.dependencies]
# Packages in this group won't be installed by pip,
# but are installed by poetry by default.
# So they are available in your dev environment,
# but not in a production environment.
myst-parser = ">=1,<5"
Sphinx = ">=6.1.3,<8.0.0"
sphinx-autobuild = ">=2021.3.14,<2025.0.0"
sphinx-rtd-theme = ">=1.2,<3.0"
sphinxcontrib-mermaid = ">=0.7.1,<0.10.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
tox = "^4.16.0"

# deployment
twine = ">=4.0.2,<6.0.0"
mypy = "^1.10.1"
pytest-asyncio = ">=0.23.7,<0.25.0"
pytest-timeout = "^2.3.1"

[tool.ruff]
lint.select = [
    "ANN", # flake8-annotations
    "E",   # flake8
    "F",   # flake8
    "I",   # isort
    "D",   # pydocstyle
    "S",   # flake8-bandit
    "NPY", # numpy-specific rules
    "RUF", # ruff specific rules
]
lint.ignore = [
    "E501",
    "E712",

    "ANN101", # Missing type annotation for `self` in method
    "ANN202", # Missing return type annotation for private function
    "ANN204", # Missing return type annotation for special function
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
    "ANN102",
    "ANN206",

    # pydocstyle
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D106", # Missing docstring in public nested class
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["S", "ANN"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.4"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
